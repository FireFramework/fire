#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# ----------------------------------------------- < \u96C6\u7FA4  \u914D\u7F6E > ------------------------------------------------ #
# flink\u672C\u5730\u72B6\u6001\u8DEF\u5F84\u9009\u4E3E\u6240\u4F9D\u8D56\u7684zk\u5730\u5740
state.external.zookeeper.url                                                        =       localhost:2181

# ----------------------------------------------- < kafka \u914D\u7F6E > ----------------------------------------------- #
# kafka\u96C6\u7FA4\u540D\u79F0\u4E0E\u96C6\u7FA4\u5730\u5740\u6620\u5C04\uFF1Akafka.brokers.name=bigdata | kafka.brokers.name=zms
fire.kafka.cluster.map.bigdata_test                                                 =       kafka-server:9092

fire.kafka.cluster.map.oggKafka                                                     =       kafka01:9092,kafka02:9092,kafka03:9092

# --------------------------------------------- < RocketMQ \u914D\u7F6E > ---------------------------------------------- #
fire.rocket.cluster.map.zms                                                         =       zms01:9876;zms02:9876;zms03:9876
fire.rocket.cluster.map.bigdata_test                                                =       rocketmq-server:9876

# -------------------------------------------- < spark-hive \u914D\u7F6E > --------------------------------------------- #
# \u5B9E\u65F6\u96C6\u7FA4hive metastore\u5730\u5740\uFF08\u522B\u540D\uFF1Astreaming\uFF09
fire.hive.cluster.map.streaming                                                     =       thrift://hive-streaming-thrift:9083
# \u6D4B\u8BD5\u96C6\u7FA4hive metastore\u5730\u5740\uFF08\u522B\u540D\uFF1Atest\uFF09
fire.hive.cluster.map.test                                                          =       thrift://hive-thrift-server:9083

# ----------------------------------------------- < HDFS \u914D\u7F6E > ------------------------------------------------ #
# \u7528\u4E8E\u662F\u5426\u542F\u7528HDFS HA
hdfs.ha.enable                                                                      =       true
# \u79BB\u7EBFhive\u96C6\u7FA4\u7684HDFS HA\u914D\u7F6E\u9879\uFF0C\u89C4\u5219\u4E3A\u7EDF\u4E00\u7684ha\u524D\u7F00\uFF1Aspark.hdfs.ha.conf.+hive.cluster\u540D\u79F0+hdfs\u4E13\u95E8\u7684ha\u914D\u7F6E
hdfs.ha.conf.test.fs.defaultFS                                                      =       hdfs://ns1
hdfs.ha.conf.test.dfs.nameservices                                                  =       ns1
hdfs.ha.conf.test.dfs.ha.namenodes.ns1                                              =       namenode310,namenode318
hdfs.ha.conf.test.dfs.namenode.rpc-address.ns1.namenode310                          =       node01:8020
hdfs.ha.conf.test.dfs.namenode.rpc-address.ns1.namenode318                          =       node03:8020
hdfs.ha.conf.test.dfs.client.failover.proxy.provider.ns1                            =       org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider

# ----------------------------------------------- < HBase \u914D\u7F6E > ----------------------------------------------- #
# \u79BB\u7EBF\u96C6\u7FA4hbase\u7684zk\u5730\u5740\uFF08\u522B\u540D\uFF1Abatch\uFF09
# fire.hbase.cluster.map.batch                                                      =       zk01:2181,zk02:2181,zk03:2181
# \u6D4B\u8BD5\u96C6\u7FA4hbase\u7684zk\u5730\u5740\uFF08\u522B\u540D\uFF1Atest\uFF09
# fire.hbase.cluster.map.test                                                       =       zk01:2181,zk02:2181,zk03:2181

# --------------------------------------------- <  \u914D\u7F6E\u4E2D\u5FC3\u914D\u7F6E  > --------------------------------------------- #
fire.config_center.enable                                                           =       false
# \u672C\u5730\u8FD0\u884C\u73AF\u5883\u4E0B\uFF08Windows\u3001Mac\uFF09\u662F\u5426\u8C03\u7528\u914D\u7F6E\u4E2D\u5FC3\u63A5\u53E3\u83B7\u53D6\u914D\u7F6E\u4FE1\u606F\uFF0C\u4EFB\u52A1\u7EA7\u522B\u914D\u7F6E\u4E0D\u751F\u6548
fire.config_center.local.enable                                                     =       false
# \u914D\u7F6E\u4E2D\u5FC3\u63A5\u53E3\u8C03\u7528\u79D8\u94A5
fire.config_center.register.conf.secret                                             =       xxxxx
# \u914D\u7F6E\u4E2D\u5FC3\u6CE8\u518C\u4E0E\u914D\u7F6E\u63A5\u53E3\u751F\u4EA7\u5730\u5740
fire.config_center.register.conf.prod.address                                       =       http://node01:8080/xx/xxx
# \u914D\u7F6E\u4E2D\u5FC3\u6CE8\u518C\u4E0E\u914D\u7F6E\u63A5\u53E3\u6D4B\u8BD5\u5730\u5740
fire.config_center.register.conf.test.address                                       =       http://node02:8080/xx/xxx

# arthas tunnel \u670D\u52A1\u7684ws\u5730\u5740
# fire.analysis.arthas.tunnel_server.url                                            =       ws://arthas-serer:7777/ws

# ---------------------------------------------- < \u5F02\u5E38\u8BCA\u65AD\u914D\u7F6E > ----------------------------------------------- #
fire.analysis.log.exception.send.mq.url                                             =       bigdata_test
fire.analysis.log.exception.send.mq.topic                                           =       platform_realtime_analysis

# ---------------------------------------------- < \u8840\u7F18\u91C7\u96C6\u914D\u7F6E > ----------------------------------------------- #
fire.lineage.send.mq.url                                                            =       bigdata_test
fire.lineage.send.mq.topic                                                          =       platform_realtime_lineage